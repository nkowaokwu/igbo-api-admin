name: CI Integration

on:
  workflow_dispatch:
  pull_request:

env:
  CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
  FIREBASE_TOKEN: ${{ secrets.STAGING_TOKEN }}
  FIREBASE_STAGING_PROJECT_ID: ${{ secrets.FIREBASE_STAGING_PROJECT_ID }}
  FIREBASE_STAGING_PRIVATE_KEY: ${{ secrets.FIREBASE_STAGING_PRIVATE_KEY }}
  FIREBASE_STAGING_CLIENT_EMAIL: ${{ secrets.FIREBASE_STAGING_CLIENT_EMAIL }}
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  DOCKER_IMAGE: igbo_api_server

jobs:
  test:
    name: Build and Test
    runs-on: ubuntu-latest
    timeout-minutes: 40
    steps:
      - name: Checkout Igbo API Admin Code üõé
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2.1.2
        with:
          node-version: '18'
      - name: Install Project Dependencies üõ†
        run: |
          yarn install
          npm install -g firebase-tools@12.9.1
      # - name: Log into Docker Account üê≥
      #   run: echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
      # - name: Run Igbo API Docker Instance üá≥üá¨
      #   run: |
      #     docker pull $DOCKER_USERNAME/$DOCKER_IMAGE
      #     yarn start:docker:ci -d
      # - name: Check Running Docker Containers ‚úÖ
      #   run: docker-compose ps -a
      - name: Setup Firebase Environment üî•
        run: |
          firebase use staging --token $FIREBASE_TOKEN
          yarn build:dev
      # - name: Set Environment Variables üìü
      #   run: |
      #     firebase functions:config:set runtime.env="cypress" --token $FIREBASE_TOKEN
      #     firebase functions:config:set runtime.staging.project_id=$FIREBASE_STAGING_PROJECT_ID runtime.staging.private_key="$FIREBASE_STAGING_PRIVATE_KEY" runtime.staging.client_email=$FIREBASE_STAGING_CLIENT_EMAIL --token $FIREBASE_TOKEN
      #     yarn functions:env
      # - name: Wait for Docker ‚è±
      #   run: sleep 10
      # - name: Run Cypress Tests üé®
      #   run: yarn test:ci
      #   env:
      #     NODE_ENV: development
      - name: Run Backend Jest Tests üî©
        run: yarn jest:backend
        env:
          NODE_ENV: test
      - name: Run Frontend Jest Tests üî©
        run: yarn jest:frontend
        env:
          NODE_ENV: test
